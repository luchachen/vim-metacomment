*vim-metacomment* MetaComment: a tools that frames and centers a key comment

===============================================================================
Contents -

1. What does this do?
2. How to use it?
3. How to configure it?
4. Configuration example

===============================================================================
 What does this do?

To highlight the comment ‘‘Public API’’ in your source code, vim-metacomment
will create (the width is 80 columns):
>
   /*============================================================================*
    *                                 Public API                                 *
    *============================================================================*/
<
This frame is by default, and can be configured.

===============================================================================
How to use it?

In command mode, call:
>
   :MetaComment Your wonderful comment
   :MetaHeader
   :set completefunc=CompleteAuthorAnchor
<
Then validates with ENTER. Easy! This command autodetects the filetype.
There is a comment style different for some filetypes. This is in place for a better
customization in case by case.

For some files, the filetype might not be correct. For instance a C header (.h) will
be associated to a C++ header, and then the C++ comment style (//) will be applied instead
of using the default C comment style (/**/)

Specific commands exist to force a comment style. It is used the same way as :MetaComment

*------------*------------*-------------------*
| Class Name | Comments   |      Command      |
*------------*------------*-------------------*
|    c       |   /* */    | :MetaCommentC     |
|    cpp     |   //       | :MetaCommentCpp   |
|    sh      |   #        | :MetaCommentSh    |
|    asm     |   ;        | :MetaCommentAsm   |
|    vim     |   "        | :MetaCommentVim   |
|    vhdl    |   --       | :MetaCommentVhdl  |
|    latex   |   %        | :MetaCommentLaTeX |
|    html    |   <!-- --> | :MetaCommentHtml  |
*------------*------------*-------------------*

===============================================================================
How to configure it?

Set the options below:
>
   let g:cauthor = "XX.(xxx@xxx.com)"
   let g:ctask = "TBD"
   let g:cfeature = "TBD"
   let g:MetaComment_header_[type] = "============================================================================*"
   let g:MetaComment_right_[type] = "*"
   let g:MetaComment_left_[type] = "*"
   let g:MetaComment_footer_[type] = "*============================================================================"
<

Replace [type] with the 'Class Name' corresponding to the type of comment
(see table above).

===============================================================================
Configuration example

let g:MetaComment_header_c = "~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=#"
let g:MetaComment_right_c = "]"
let g:MetaComment_left_c = "$"
let g:MetaComment_footer_c = "#=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~"

>
   :MetaComment My comment
<

In a C file produces:

/*~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=#
 $                                 My comment                                 ]
 #=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~*/

